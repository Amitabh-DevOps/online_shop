name: Destroy All Infrastructure

# This workflow is manually triggered via the GitHub Actions UI.
on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type 'destroy' to confirm"
        required: true

jobs:
  terraform-destroy-all:
    name: Destroy Application and Backend Resources
    runs-on: ubuntu-latest
    steps:
      #####################################################################
      # Step 1: Checkout the Repository
      #####################################################################
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: github-action

      #####################################################################
      # Step 2: Setup Terraform CLI and Configure AWS Credentials
      #####################################################################
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      #####################################################################
      # Step 3: Destroy Application Resources (EC2, etc.)
      #####################################################################
      - name: Initialize Terraform (Application Resources)
        run: terraform init
        working-directory: terraform/terraform_resources
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

      - name: Destroy Application Resources
        if: ${{ github.event.inputs.confirm == 'destroy' }}
        run: terraform destroy --auto-approve
        working-directory: terraform/terraform_resources
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

      #####################################################################
      # Step 4: Destroy Backend Resources (S3 Bucket and DynamoDB Table)
      #####################################################################
      - name: Initialize Terraform (Backend Resources)
        run: terraform init
        working-directory: terraform/terraform_backend
        env:
          TF_VAR_create_backend: "true"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

      # Debugging: List available S3 buckets to verify connectivity.
      - name: Debug - List S3 Buckets
        run: aws s3 ls
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

      # Debugging: List DynamoDB tables to verify connectivity.
      - name: Debug - List DynamoDB Tables
        run: aws dynamodb list-tables
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

      # Attempt to import the S3 bucket resource if it exists.
      - name: Import S3 Bucket (if exists)
        continue-on-error: true
        run: terraform import 'aws_s3_bucket.terraform_aws_s3_bucket[0]' ${{ secrets.AWS_S3_BUCKET }}
        working-directory: terraform/terraform_backend
        env:
          TF_VAR_create_backend: "true"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

      # Attempt to import the DynamoDB table resource if it exists.
      - name: Import DynamoDB Table (if exists)
        continue-on-error: true
        run: terraform import 'aws_dynamodb_table.terraform_aws_db[0]' ${{ secrets.AWS_DYNAMODB_TABLE }}
        working-directory: terraform/terraform_backend
        env:
          TF_VAR_create_backend: "true"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

      #####################################################################
      # Step 5: Empty the S3 Bucket
      #####################################################################
      - name: Empty S3 Bucket
        run: aws s3 rm s3://${{ secrets.AWS_S3_BUCKET }} --recursive
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

      #####################################################################
      # Step 6: Destroy Backend Resources
      #####################################################################
      - name: Destroy Backend Resources
        run: terraform destroy --auto-approve -var="create_backend=true"
        working-directory: terraform/terraform_backend
        env:
          TF_VAR_create_backend: "true"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1


 # Final step: Send email notification regardless of success or failure
      - name: Send Email
        if: always()  # This step runs even if previous steps fail
        uses: hilarion5/send-mail@v1
        with:
          smtp-server: smtp.gmail.com
          smtp-port: 465
          smtp-secure: true
          from-email: ${{ secrets.MAIL_FROM }}
          to-email: amitabhsoni2004@gmail.com,trainwithshubham@gmail.com  # comma-separated list of recipients
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "Destroy Workflow Notification: ${{ github.workflow }} - Status: ${{ job.status }}"
          body: "The destroy workflow has completed."
          html: |
            <h2>GitHub Actions - Destroy Workflow</h2>
            <p>Hello Team,</p>
            <p>The destroy workflow has just completed.</p>
            <table border="1" cellpadding="6" cellspacing="0" style="border-collapse: collapse;">
              <tr style="background-color: #f2f2f2;">
                <th align="left">Workflow</th>
                <td>${{ github.workflow }}</td>
              </tr>
              <tr>
                <th align="left">Status</th>
                <td><strong>${{ job.status }}</strong></td>
              </tr>
              <tr>
                <th align="left">Triggered by</th>
                <td>${{ github.actor }}</td>
              </tr>
              <tr>
                <th align="left">Repository</th>
                <td>${{ github.repository }}</td>
              </tr>
              <tr>
                <th align="left">Branch</th>
                <td>${{ github.ref }}</td>
              </tr>
              <tr>
                <th align="left">Run ID</th>
                <td>
                  <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">
                    View Run #${{ github.run_id }}
                  </a>
                </td>
              </tr>
            </table>
            <br/>
            <p style="font-style: italic;">
              This email is sent automatically upon completion of the destroy workflow.
            </p>