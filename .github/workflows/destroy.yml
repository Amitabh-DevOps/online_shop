name: Destroy All Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type 'destroy' to confirm"
        required: true
        type: string

env:
  AWS_REGION: eu-west-1
  S3_BUCKET: github-actions-buckets-new
  DYNAMODB_TABLE: github-actions-dbs-new

jobs:
  ###########################################################################
  # Job 1: Destroy Application Resources
  ###########################################################################
  destroy-resources:
    name: Destroy Application Resources
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'destroy'
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: github-action

      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      # Step 3: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 4: Verify AWS CLI
      - name: Check AWS CLI Version
        run: aws --version

      # Step 5: Initialize Terraform (Application Resources)
      - name: Initialize Terraform (Application Resources)
        run: terraform init
        working-directory: terraform/terraform_resources

      # Step 6: Plan destruction (for review)
      - name: Plan Terraform Destroy
        run: terraform plan -destroy
        working-directory: terraform/terraform_resources

      # Step 7: Destroy Application Resources
      - name: Destroy Application Resources
        run: terraform destroy --auto-approve
        working-directory: terraform/terraform_resources

  ###########################################################################
  # Job 2: Destroy Backend Resources
  ###########################################################################
  destroy-backend:
    name: Destroy Backend Resources
    runs-on: ubuntu-latest
    needs: destroy-resources
    if: github.event.inputs.confirm == 'destroy'
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: github-action

      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      # Step 3: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 4: Empty S3 bucket before destroying
      - name: Empty S3 Bucket
        run: |
          echo "Emptying S3 bucket: ${{ env.S3_BUCKET }}"
          aws s3 rm s3://${{ env.S3_BUCKET }} --recursive || true
          echo "S3 bucket emptied successfully"
        continue-on-error: true

      # Step 5: Initialize Terraform (Backend Resources)
      - name: Initialize Terraform (Backend Resources)
        run: terraform init
        working-directory: terraform/terraform_backend

      # Step 6: Plan destruction (for review)
      - name: Plan Backend Destroy
        run: terraform plan -destroy -var="create_backend=true"
        working-directory: terraform/terraform_backend

      # Step 7: Destroy Backend Resources
      - name: Destroy Backend Resources
        run: terraform destroy --auto-approve -var="create_backend=true"
        working-directory: terraform/terraform_backend

  ###########################################################################
  # Job 3: Verify Cleanup
  ###########################################################################
  cleanup-verification:
    name: Verify Cleanup
    runs-on: ubuntu-latest
    needs: [destroy-resources, destroy-backend]
    if: github.event.inputs.confirm == 'destroy'
    steps:
      # Step 1: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 2: Verify Resources Destroyed
      - name: Verify Resources Destroyed
        run: |
          echo "🔍 Verifying that resources have been destroyed..."
          
          # Check if S3 bucket still exists
          if aws s3api head-bucket --bucket "${{ env.S3_BUCKET }}" --region "${{ env.AWS_REGION }}" 2>/dev/null; then
            echo "⚠️  S3 bucket '${{ env.S3_BUCKET }}' still exists"
            CLEANUP_STATUS="PARTIAL"
          else
            echo "✅ S3 bucket '${{ env.S3_BUCKET }}' destroyed successfully"
          fi
          
          # Check if DynamoDB table still exists
          if aws dynamodb describe-table --table-name "${{ env.DYNAMODB_TABLE }}" --region "${{ env.AWS_REGION }}" 2>/dev/null; then
            echo "⚠️  DynamoDB table '${{ env.DYNAMODB_TABLE }}' still exists"
            CLEANUP_STATUS="PARTIAL"
          else
            echo "✅ DynamoDB table '${{ env.DYNAMODB_TABLE }}' destroyed successfully"
          fi
          
          # Check for any remaining EC2 instances with our tags
          INSTANCES=$(aws ec2 describe-instances \
            --region "${{ env.AWS_REGION }}" \
            --filters "Name=tag:Project,Values=online-shop" "Name=instance-state-name,Values=running,pending,stopping,stopped" \
            --query 'Reservations[*].Instances[*].InstanceId' \
            --output text)
          
          if [ -n "$INSTANCES" ] && [ "$INSTANCES" != "None" ]; then
            echo "⚠️  Found remaining EC2 instances: $INSTANCES"
            CLEANUP_STATUS="PARTIAL"
          else
            echo "✅ No remaining EC2 instances found"
          fi
          
          # Final status
          if [ "$CLEANUP_STATUS" = "PARTIAL" ]; then
            echo "⚠️  Cleanup completed with some resources remaining"
            echo "Please check AWS console for any remaining resources"
          else
            echo "🎉 All resources destroyed successfully!"
          fi
          
          echo "Cleanup verification completed"

  ###########################################################################
  # Job 4: Send Notification Email
  ###########################################################################
  send-notification:
    name: Send Email Notification
    runs-on: ubuntu-latest
    needs: [destroy-resources, destroy-backend, cleanup-verification]
    if: always() && github.event.inputs.confirm == 'destroy'
    steps:
      # Step 1: Determine overall pipeline status
      - name: Determine Pipeline Status
        id: pipeline-status
        run: |
          if [[ "${{ needs.destroy-resources.result }}" == "success" ]] && \
             [[ "${{ needs.destroy-backend.result }}" == "success" ]] && \
             [[ "${{ needs.cleanup-verification.result }}" == "success" ]]; then
            echo "result=Success ✅" >> $GITHUB_OUTPUT
            echo "message=All infrastructure destroyed successfully" >> $GITHUB_OUTPUT
          else
            echo "result=Failed ❌" >> $GITHUB_OUTPUT
            echo "message=Some resources may not have been destroyed completely" >> $GITHUB_OUTPUT
          fi

      # Step 2: Send Email Notification
      - name: Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "🔥 Infrastructure Destroy Notification - ${{ steps.pipeline-status.outputs.result }}"
          to: ${{ secrets.MAIL_TO }}
          from: ${{ secrets.MAIL_FROM }}
          html_body: |
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background-color: #ffffff;">
              <h2 style="color: #d73a49; text-align: center;">🔥 Infrastructure Destroy Notification</h2>
              
              <div style="background-color: #fff5f5; padding: 16px; border-radius: 6px; border-left: 4px solid #d73a49;">
                <h3 style="margin-top: 0; color: #d73a49;">Destruction Summary</h3>
                <p><strong>Status:</strong> ${{ steps.pipeline-status.outputs.result }}</p>
                <p><strong>Message:</strong> ${{ steps.pipeline-status.outputs.message }}</p>
              </div>

              <div style="background-color: #f6f8fa; padding: 16px; border-radius: 6px; margin-top: 16px;">
                <table style="width: 100%; border-collapse: collapse;">
                  <tr>
                    <td style="padding: 10px; border-bottom: 1px solid #ddd;"><strong>Workflow</strong></td>
                    <td style="padding: 10px; border-bottom: 1px solid #ddd;">${{ github.workflow }}</td>
                  </tr>
                  <tr>
                    <td style="padding: 10px; border-bottom: 1px solid #ddd;"><strong>Triggered by</strong></td>
                    <td style="padding: 10px; border-bottom: 1px solid #ddd;">${{ github.actor }}</td>
                  </tr>
                  <tr>
                    <td style="padding: 10px; border-bottom: 1px solid #ddd;"><strong>Repository</strong></td>
                    <td style="padding: 10px; border-bottom: 1px solid #ddd;">${{ github.repository }}</td>
                  </tr>
                  <tr>
                    <td style="padding: 10px; border-bottom: 1px solid #ddd;"><strong>Run Details</strong></td>
                    <td style="padding: 10px; border-bottom: 1px solid #ddd;">
                      <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" style="color: #0366d6; text-decoration: none;">
                        View Run #${{ github.run_id }}
                      </a>
                    </td>
                  </tr>
                </table>
              </div>

              <h3 style="margin-top: 16px;">🛠 Job Statuses</h3>
              <table style="width: 100%; border-collapse: collapse; background-color: #fff;">
                <tr style="background-color: #f6f8fa;">
                  <th style="padding: 10px; text-align: left;">Job</th>
                  <th style="padding: 10px; text-align: center;">Status</th>
                </tr>
                <tr>
                  <td style="padding: 10px;">Destroy Application Resources</td>
                  <td style="padding: 10px; text-align: center; color: white; background-color: ${{ needs.destroy-resources.result == 'success' && '#28a745' || '#d73a49' }}; border-radius: 4px;">
                    ${{ needs.destroy-resources.result }}
                  </td>
                </tr>
                <tr>
                  <td style="padding: 10px;">Destroy Backend Resources</td>
                  <td style="padding: 10px; text-align: center; color: white; background-color: ${{ needs.destroy-backend.result == 'success' && '#28a745' || '#d73a49' }}; border-radius: 4px;">
                    ${{ needs.destroy-backend.result }}
                  </td>
                </tr>
                <tr>
                  <td style="padding: 10px;">Cleanup Verification</td>
                  <td style="padding: 10px; text-align: center; color: white; background-color: ${{ needs.cleanup-verification.result == 'success' && '#28a745' || '#d73a49' }}; border-radius: 4px;">
                    ${{ needs.cleanup-verification.result }}
                  </td>
                </tr>
              </table>

              <div style="background-color: #fff3cd; padding: 16px; border-radius: 6px; margin-top: 16px; border-left: 4px solid #ffc107;">
                <h4 style="margin-top: 0; color: #856404;">⚠️ Important Notes</h4>
                <ul style="margin-bottom: 0; color: #856404;">
                  <li>Please verify in AWS Console that all resources have been destroyed</li>
                  <li>Check for any remaining charges in your AWS billing dashboard</li>
                  <li>Some resources may take time to fully terminate</li>
                </ul>
              </div>

              <p style="color: #6a737d; font-size: 0.9em; margin-top: 20px; text-align: center;">
                This email was sent automatically by <strong>GitHub Actions</strong>.
              </p>
            </div>
        continue-on-error: true
